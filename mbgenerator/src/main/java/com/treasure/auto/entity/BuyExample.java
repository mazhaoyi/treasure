package com.treasure.auto.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class BuyExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table buy
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table buy
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table buy
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table buy
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    public BuyExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table buy
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table buy
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table buy
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table buy
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table buy
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table buy
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table buy
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table buy
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table buy
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table buy
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table buy
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andBuy_idIsNull() {
            addCriterion("buy_id is null");
            return (Criteria) this;
        }

        public Criteria andBuy_idIsNotNull() {
            addCriterion("buy_id is not null");
            return (Criteria) this;
        }

        public Criteria andBuy_idEqualTo(Integer value) {
            addCriterion("buy_id =", value, "buy_id");
            return (Criteria) this;
        }

        public Criteria andBuy_idNotEqualTo(Integer value) {
            addCriterion("buy_id <>", value, "buy_id");
            return (Criteria) this;
        }

        public Criteria andBuy_idGreaterThan(Integer value) {
            addCriterion("buy_id >", value, "buy_id");
            return (Criteria) this;
        }

        public Criteria andBuy_idGreaterThanOrEqualTo(Integer value) {
            addCriterion("buy_id >=", value, "buy_id");
            return (Criteria) this;
        }

        public Criteria andBuy_idLessThan(Integer value) {
            addCriterion("buy_id <", value, "buy_id");
            return (Criteria) this;
        }

        public Criteria andBuy_idLessThanOrEqualTo(Integer value) {
            addCriterion("buy_id <=", value, "buy_id");
            return (Criteria) this;
        }

        public Criteria andBuy_idIn(List<Integer> values) {
            addCriterion("buy_id in", values, "buy_id");
            return (Criteria) this;
        }

        public Criteria andBuy_idNotIn(List<Integer> values) {
            addCriterion("buy_id not in", values, "buy_id");
            return (Criteria) this;
        }

        public Criteria andBuy_idBetween(Integer value1, Integer value2) {
            addCriterion("buy_id between", value1, value2, "buy_id");
            return (Criteria) this;
        }

        public Criteria andBuy_idNotBetween(Integer value1, Integer value2) {
            addCriterion("buy_id not between", value1, value2, "buy_id");
            return (Criteria) this;
        }

        public Criteria andStart_noIsNull() {
            addCriterion("start_no is null");
            return (Criteria) this;
        }

        public Criteria andStart_noIsNotNull() {
            addCriterion("start_no is not null");
            return (Criteria) this;
        }

        public Criteria andStart_noEqualTo(Short value) {
            addCriterion("start_no =", value, "start_no");
            return (Criteria) this;
        }

        public Criteria andStart_noNotEqualTo(Short value) {
            addCriterion("start_no <>", value, "start_no");
            return (Criteria) this;
        }

        public Criteria andStart_noGreaterThan(Short value) {
            addCriterion("start_no >", value, "start_no");
            return (Criteria) this;
        }

        public Criteria andStart_noGreaterThanOrEqualTo(Short value) {
            addCriterion("start_no >=", value, "start_no");
            return (Criteria) this;
        }

        public Criteria andStart_noLessThan(Short value) {
            addCriterion("start_no <", value, "start_no");
            return (Criteria) this;
        }

        public Criteria andStart_noLessThanOrEqualTo(Short value) {
            addCriterion("start_no <=", value, "start_no");
            return (Criteria) this;
        }

        public Criteria andStart_noIn(List<Short> values) {
            addCriterion("start_no in", values, "start_no");
            return (Criteria) this;
        }

        public Criteria andStart_noNotIn(List<Short> values) {
            addCriterion("start_no not in", values, "start_no");
            return (Criteria) this;
        }

        public Criteria andStart_noBetween(Short value1, Short value2) {
            addCriterion("start_no between", value1, value2, "start_no");
            return (Criteria) this;
        }

        public Criteria andStart_noNotBetween(Short value1, Short value2) {
            addCriterion("start_no not between", value1, value2, "start_no");
            return (Criteria) this;
        }

        public Criteria andEnd_noIsNull() {
            addCriterion("end_no is null");
            return (Criteria) this;
        }

        public Criteria andEnd_noIsNotNull() {
            addCriterion("end_no is not null");
            return (Criteria) this;
        }

        public Criteria andEnd_noEqualTo(Short value) {
            addCriterion("end_no =", value, "end_no");
            return (Criteria) this;
        }

        public Criteria andEnd_noNotEqualTo(Short value) {
            addCriterion("end_no <>", value, "end_no");
            return (Criteria) this;
        }

        public Criteria andEnd_noGreaterThan(Short value) {
            addCriterion("end_no >", value, "end_no");
            return (Criteria) this;
        }

        public Criteria andEnd_noGreaterThanOrEqualTo(Short value) {
            addCriterion("end_no >=", value, "end_no");
            return (Criteria) this;
        }

        public Criteria andEnd_noLessThan(Short value) {
            addCriterion("end_no <", value, "end_no");
            return (Criteria) this;
        }

        public Criteria andEnd_noLessThanOrEqualTo(Short value) {
            addCriterion("end_no <=", value, "end_no");
            return (Criteria) this;
        }

        public Criteria andEnd_noIn(List<Short> values) {
            addCriterion("end_no in", values, "end_no");
            return (Criteria) this;
        }

        public Criteria andEnd_noNotIn(List<Short> values) {
            addCriterion("end_no not in", values, "end_no");
            return (Criteria) this;
        }

        public Criteria andEnd_noBetween(Short value1, Short value2) {
            addCriterion("end_no between", value1, value2, "end_no");
            return (Criteria) this;
        }

        public Criteria andEnd_noNotBetween(Short value1, Short value2) {
            addCriterion("end_no not between", value1, value2, "end_no");
            return (Criteria) this;
        }

        public Criteria andTicket_dateIsNull() {
            addCriterion("ticket_date is null");
            return (Criteria) this;
        }

        public Criteria andTicket_dateIsNotNull() {
            addCriterion("ticket_date is not null");
            return (Criteria) this;
        }

        public Criteria andTicket_dateEqualTo(Date value) {
            addCriterionForJDBCDate("ticket_date =", value, "ticket_date");
            return (Criteria) this;
        }

        public Criteria andTicket_dateNotEqualTo(Date value) {
            addCriterionForJDBCDate("ticket_date <>", value, "ticket_date");
            return (Criteria) this;
        }

        public Criteria andTicket_dateGreaterThan(Date value) {
            addCriterionForJDBCDate("ticket_date >", value, "ticket_date");
            return (Criteria) this;
        }

        public Criteria andTicket_dateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ticket_date >=", value, "ticket_date");
            return (Criteria) this;
        }

        public Criteria andTicket_dateLessThan(Date value) {
            addCriterionForJDBCDate("ticket_date <", value, "ticket_date");
            return (Criteria) this;
        }

        public Criteria andTicket_dateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ticket_date <=", value, "ticket_date");
            return (Criteria) this;
        }

        public Criteria andTicket_dateIn(List<Date> values) {
            addCriterionForJDBCDate("ticket_date in", values, "ticket_date");
            return (Criteria) this;
        }

        public Criteria andTicket_dateNotIn(List<Date> values) {
            addCriterionForJDBCDate("ticket_date not in", values, "ticket_date");
            return (Criteria) this;
        }

        public Criteria andTicket_dateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ticket_date between", value1, value2, "ticket_date");
            return (Criteria) this;
        }

        public Criteria andTicket_dateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ticket_date not between", value1, value2, "ticket_date");
            return (Criteria) this;
        }

        public Criteria andEnd_flagIsNull() {
            addCriterion("end_flag is null");
            return (Criteria) this;
        }

        public Criteria andEnd_flagIsNotNull() {
            addCriterion("end_flag is not null");
            return (Criteria) this;
        }

        public Criteria andEnd_flagEqualTo(Boolean value) {
            addCriterion("end_flag =", value, "end_flag");
            return (Criteria) this;
        }

        public Criteria andEnd_flagNotEqualTo(Boolean value) {
            addCriterion("end_flag <>", value, "end_flag");
            return (Criteria) this;
        }

        public Criteria andEnd_flagGreaterThan(Boolean value) {
            addCriterion("end_flag >", value, "end_flag");
            return (Criteria) this;
        }

        public Criteria andEnd_flagGreaterThanOrEqualTo(Boolean value) {
            addCriterion("end_flag >=", value, "end_flag");
            return (Criteria) this;
        }

        public Criteria andEnd_flagLessThan(Boolean value) {
            addCriterion("end_flag <", value, "end_flag");
            return (Criteria) this;
        }

        public Criteria andEnd_flagLessThanOrEqualTo(Boolean value) {
            addCriterion("end_flag <=", value, "end_flag");
            return (Criteria) this;
        }

        public Criteria andEnd_flagIn(List<Boolean> values) {
            addCriterion("end_flag in", values, "end_flag");
            return (Criteria) this;
        }

        public Criteria andEnd_flagNotIn(List<Boolean> values) {
            addCriterion("end_flag not in", values, "end_flag");
            return (Criteria) this;
        }

        public Criteria andEnd_flagBetween(Boolean value1, Boolean value2) {
            addCriterion("end_flag between", value1, value2, "end_flag");
            return (Criteria) this;
        }

        public Criteria andEnd_flagNotBetween(Boolean value1, Boolean value2) {
            addCriterion("end_flag not between", value1, value2, "end_flag");
            return (Criteria) this;
        }

        public Criteria andUser_idIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUser_idIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUser_idEqualTo(Integer value) {
            addCriterion("user_id =", value, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idGreaterThan(Integer value) {
            addCriterion("user_id >", value, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idLessThan(Integer value) {
            addCriterion("user_id <", value, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idIn(List<Integer> values) {
            addCriterion("user_id in", values, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "user_id");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table buy
     *
     * @mbg.generated do_not_delete_during_merge Sun Sep 30 16:04:29 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table buy
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}