package com.treasure.auto.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class TicketExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ticket
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ticket
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ticket
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    public TicketExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ticket
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andTicket_idIsNull() {
            addCriterion("ticket_id is null");
            return (Criteria) this;
        }

        public Criteria andTicket_idIsNotNull() {
            addCriterion("ticket_id is not null");
            return (Criteria) this;
        }

        public Criteria andTicket_idEqualTo(Integer value) {
            addCriterion("ticket_id =", value, "ticket_id");
            return (Criteria) this;
        }

        public Criteria andTicket_idNotEqualTo(Integer value) {
            addCriterion("ticket_id <>", value, "ticket_id");
            return (Criteria) this;
        }

        public Criteria andTicket_idGreaterThan(Integer value) {
            addCriterion("ticket_id >", value, "ticket_id");
            return (Criteria) this;
        }

        public Criteria andTicket_idGreaterThanOrEqualTo(Integer value) {
            addCriterion("ticket_id >=", value, "ticket_id");
            return (Criteria) this;
        }

        public Criteria andTicket_idLessThan(Integer value) {
            addCriterion("ticket_id <", value, "ticket_id");
            return (Criteria) this;
        }

        public Criteria andTicket_idLessThanOrEqualTo(Integer value) {
            addCriterion("ticket_id <=", value, "ticket_id");
            return (Criteria) this;
        }

        public Criteria andTicket_idIn(List<Integer> values) {
            addCriterion("ticket_id in", values, "ticket_id");
            return (Criteria) this;
        }

        public Criteria andTicket_idNotIn(List<Integer> values) {
            addCriterion("ticket_id not in", values, "ticket_id");
            return (Criteria) this;
        }

        public Criteria andTicket_idBetween(Integer value1, Integer value2) {
            addCriterion("ticket_id between", value1, value2, "ticket_id");
            return (Criteria) this;
        }

        public Criteria andTicket_idNotBetween(Integer value1, Integer value2) {
            addCriterion("ticket_id not between", value1, value2, "ticket_id");
            return (Criteria) this;
        }

        public Criteria andTicket_noIsNull() {
            addCriterion("ticket_no is null");
            return (Criteria) this;
        }

        public Criteria andTicket_noIsNotNull() {
            addCriterion("ticket_no is not null");
            return (Criteria) this;
        }

        public Criteria andTicket_noEqualTo(String value) {
            addCriterion("ticket_no =", value, "ticket_no");
            return (Criteria) this;
        }

        public Criteria andTicket_noNotEqualTo(String value) {
            addCriterion("ticket_no <>", value, "ticket_no");
            return (Criteria) this;
        }

        public Criteria andTicket_noGreaterThan(String value) {
            addCriterion("ticket_no >", value, "ticket_no");
            return (Criteria) this;
        }

        public Criteria andTicket_noGreaterThanOrEqualTo(String value) {
            addCriterion("ticket_no >=", value, "ticket_no");
            return (Criteria) this;
        }

        public Criteria andTicket_noLessThan(String value) {
            addCriterion("ticket_no <", value, "ticket_no");
            return (Criteria) this;
        }

        public Criteria andTicket_noLessThanOrEqualTo(String value) {
            addCriterion("ticket_no <=", value, "ticket_no");
            return (Criteria) this;
        }

        public Criteria andTicket_noLike(String value) {
            addCriterion("ticket_no like", value, "ticket_no");
            return (Criteria) this;
        }

        public Criteria andTicket_noNotLike(String value) {
            addCriterion("ticket_no not like", value, "ticket_no");
            return (Criteria) this;
        }

        public Criteria andTicket_noIn(List<String> values) {
            addCriterion("ticket_no in", values, "ticket_no");
            return (Criteria) this;
        }

        public Criteria andTicket_noNotIn(List<String> values) {
            addCriterion("ticket_no not in", values, "ticket_no");
            return (Criteria) this;
        }

        public Criteria andTicket_noBetween(String value1, String value2) {
            addCriterion("ticket_no between", value1, value2, "ticket_no");
            return (Criteria) this;
        }

        public Criteria andTicket_noNotBetween(String value1, String value2) {
            addCriterion("ticket_no not between", value1, value2, "ticket_no");
            return (Criteria) this;
        }

        public Criteria andTicket_numIsNull() {
            addCriterion("ticket_num is null");
            return (Criteria) this;
        }

        public Criteria andTicket_numIsNotNull() {
            addCriterion("ticket_num is not null");
            return (Criteria) this;
        }

        public Criteria andTicket_numEqualTo(String value) {
            addCriterion("ticket_num =", value, "ticket_num");
            return (Criteria) this;
        }

        public Criteria andTicket_numNotEqualTo(String value) {
            addCriterion("ticket_num <>", value, "ticket_num");
            return (Criteria) this;
        }

        public Criteria andTicket_numGreaterThan(String value) {
            addCriterion("ticket_num >", value, "ticket_num");
            return (Criteria) this;
        }

        public Criteria andTicket_numGreaterThanOrEqualTo(String value) {
            addCriterion("ticket_num >=", value, "ticket_num");
            return (Criteria) this;
        }

        public Criteria andTicket_numLessThan(String value) {
            addCriterion("ticket_num <", value, "ticket_num");
            return (Criteria) this;
        }

        public Criteria andTicket_numLessThanOrEqualTo(String value) {
            addCriterion("ticket_num <=", value, "ticket_num");
            return (Criteria) this;
        }

        public Criteria andTicket_numLike(String value) {
            addCriterion("ticket_num like", value, "ticket_num");
            return (Criteria) this;
        }

        public Criteria andTicket_numNotLike(String value) {
            addCriterion("ticket_num not like", value, "ticket_num");
            return (Criteria) this;
        }

        public Criteria andTicket_numIn(List<String> values) {
            addCriterion("ticket_num in", values, "ticket_num");
            return (Criteria) this;
        }

        public Criteria andTicket_numNotIn(List<String> values) {
            addCriterion("ticket_num not in", values, "ticket_num");
            return (Criteria) this;
        }

        public Criteria andTicket_numBetween(String value1, String value2) {
            addCriterion("ticket_num between", value1, value2, "ticket_num");
            return (Criteria) this;
        }

        public Criteria andTicket_numNotBetween(String value1, String value2) {
            addCriterion("ticket_num not between", value1, value2, "ticket_num");
            return (Criteria) this;
        }

        public Criteria andTicket_dateIsNull() {
            addCriterion("ticket_date is null");
            return (Criteria) this;
        }

        public Criteria andTicket_dateIsNotNull() {
            addCriterion("ticket_date is not null");
            return (Criteria) this;
        }

        public Criteria andTicket_dateEqualTo(Date value) {
            addCriterionForJDBCDate("ticket_date =", value, "ticket_date");
            return (Criteria) this;
        }

        public Criteria andTicket_dateNotEqualTo(Date value) {
            addCriterionForJDBCDate("ticket_date <>", value, "ticket_date");
            return (Criteria) this;
        }

        public Criteria andTicket_dateGreaterThan(Date value) {
            addCriterionForJDBCDate("ticket_date >", value, "ticket_date");
            return (Criteria) this;
        }

        public Criteria andTicket_dateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ticket_date >=", value, "ticket_date");
            return (Criteria) this;
        }

        public Criteria andTicket_dateLessThan(Date value) {
            addCriterionForJDBCDate("ticket_date <", value, "ticket_date");
            return (Criteria) this;
        }

        public Criteria andTicket_dateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ticket_date <=", value, "ticket_date");
            return (Criteria) this;
        }

        public Criteria andTicket_dateIn(List<Date> values) {
            addCriterionForJDBCDate("ticket_date in", values, "ticket_date");
            return (Criteria) this;
        }

        public Criteria andTicket_dateNotIn(List<Date> values) {
            addCriterionForJDBCDate("ticket_date not in", values, "ticket_date");
            return (Criteria) this;
        }

        public Criteria andTicket_dateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ticket_date between", value1, value2, "ticket_date");
            return (Criteria) this;
        }

        public Criteria andTicket_dateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ticket_date not between", value1, value2, "ticket_date");
            return (Criteria) this;
        }

        public Criteria andBef3_max_countIsNull() {
            addCriterion("bef3_max_count is null");
            return (Criteria) this;
        }

        public Criteria andBef3_max_countIsNotNull() {
            addCriterion("bef3_max_count is not null");
            return (Criteria) this;
        }

        public Criteria andBef3_max_countEqualTo(Boolean value) {
            addCriterion("bef3_max_count =", value, "bef3_max_count");
            return (Criteria) this;
        }

        public Criteria andBef3_max_countNotEqualTo(Boolean value) {
            addCriterion("bef3_max_count <>", value, "bef3_max_count");
            return (Criteria) this;
        }

        public Criteria andBef3_max_countGreaterThan(Boolean value) {
            addCriterion("bef3_max_count >", value, "bef3_max_count");
            return (Criteria) this;
        }

        public Criteria andBef3_max_countGreaterThanOrEqualTo(Boolean value) {
            addCriterion("bef3_max_count >=", value, "bef3_max_count");
            return (Criteria) this;
        }

        public Criteria andBef3_max_countLessThan(Boolean value) {
            addCriterion("bef3_max_count <", value, "bef3_max_count");
            return (Criteria) this;
        }

        public Criteria andBef3_max_countLessThanOrEqualTo(Boolean value) {
            addCriterion("bef3_max_count <=", value, "bef3_max_count");
            return (Criteria) this;
        }

        public Criteria andBef3_max_countIn(List<Boolean> values) {
            addCriterion("bef3_max_count in", values, "bef3_max_count");
            return (Criteria) this;
        }

        public Criteria andBef3_max_countNotIn(List<Boolean> values) {
            addCriterion("bef3_max_count not in", values, "bef3_max_count");
            return (Criteria) this;
        }

        public Criteria andBef3_max_countBetween(Boolean value1, Boolean value2) {
            addCriterion("bef3_max_count between", value1, value2, "bef3_max_count");
            return (Criteria) this;
        }

        public Criteria andBef3_max_countNotBetween(Boolean value1, Boolean value2) {
            addCriterion("bef3_max_count not between", value1, value2, "bef3_max_count");
            return (Criteria) this;
        }

        public Criteria andMid3_max_countIsNull() {
            addCriterion("mid3_max_count is null");
            return (Criteria) this;
        }

        public Criteria andMid3_max_countIsNotNull() {
            addCriterion("mid3_max_count is not null");
            return (Criteria) this;
        }

        public Criteria andMid3_max_countEqualTo(Boolean value) {
            addCriterion("mid3_max_count =", value, "mid3_max_count");
            return (Criteria) this;
        }

        public Criteria andMid3_max_countNotEqualTo(Boolean value) {
            addCriterion("mid3_max_count <>", value, "mid3_max_count");
            return (Criteria) this;
        }

        public Criteria andMid3_max_countGreaterThan(Boolean value) {
            addCriterion("mid3_max_count >", value, "mid3_max_count");
            return (Criteria) this;
        }

        public Criteria andMid3_max_countGreaterThanOrEqualTo(Boolean value) {
            addCriterion("mid3_max_count >=", value, "mid3_max_count");
            return (Criteria) this;
        }

        public Criteria andMid3_max_countLessThan(Boolean value) {
            addCriterion("mid3_max_count <", value, "mid3_max_count");
            return (Criteria) this;
        }

        public Criteria andMid3_max_countLessThanOrEqualTo(Boolean value) {
            addCriterion("mid3_max_count <=", value, "mid3_max_count");
            return (Criteria) this;
        }

        public Criteria andMid3_max_countIn(List<Boolean> values) {
            addCriterion("mid3_max_count in", values, "mid3_max_count");
            return (Criteria) this;
        }

        public Criteria andMid3_max_countNotIn(List<Boolean> values) {
            addCriterion("mid3_max_count not in", values, "mid3_max_count");
            return (Criteria) this;
        }

        public Criteria andMid3_max_countBetween(Boolean value1, Boolean value2) {
            addCriterion("mid3_max_count between", value1, value2, "mid3_max_count");
            return (Criteria) this;
        }

        public Criteria andMid3_max_countNotBetween(Boolean value1, Boolean value2) {
            addCriterion("mid3_max_count not between", value1, value2, "mid3_max_count");
            return (Criteria) this;
        }

        public Criteria andAft3_max_countIsNull() {
            addCriterion("aft3_max_count is null");
            return (Criteria) this;
        }

        public Criteria andAft3_max_countIsNotNull() {
            addCriterion("aft3_max_count is not null");
            return (Criteria) this;
        }

        public Criteria andAft3_max_countEqualTo(Boolean value) {
            addCriterion("aft3_max_count =", value, "aft3_max_count");
            return (Criteria) this;
        }

        public Criteria andAft3_max_countNotEqualTo(Boolean value) {
            addCriterion("aft3_max_count <>", value, "aft3_max_count");
            return (Criteria) this;
        }

        public Criteria andAft3_max_countGreaterThan(Boolean value) {
            addCriterion("aft3_max_count >", value, "aft3_max_count");
            return (Criteria) this;
        }

        public Criteria andAft3_max_countGreaterThanOrEqualTo(Boolean value) {
            addCriterion("aft3_max_count >=", value, "aft3_max_count");
            return (Criteria) this;
        }

        public Criteria andAft3_max_countLessThan(Boolean value) {
            addCriterion("aft3_max_count <", value, "aft3_max_count");
            return (Criteria) this;
        }

        public Criteria andAft3_max_countLessThanOrEqualTo(Boolean value) {
            addCriterion("aft3_max_count <=", value, "aft3_max_count");
            return (Criteria) this;
        }

        public Criteria andAft3_max_countIn(List<Boolean> values) {
            addCriterion("aft3_max_count in", values, "aft3_max_count");
            return (Criteria) this;
        }

        public Criteria andAft3_max_countNotIn(List<Boolean> values) {
            addCriterion("aft3_max_count not in", values, "aft3_max_count");
            return (Criteria) this;
        }

        public Criteria andAft3_max_countBetween(Boolean value1, Boolean value2) {
            addCriterion("aft3_max_count between", value1, value2, "aft3_max_count");
            return (Criteria) this;
        }

        public Criteria andAft3_max_countNotBetween(Boolean value1, Boolean value2) {
            addCriterion("aft3_max_count not between", value1, value2, "aft3_max_count");
            return (Criteria) this;
        }

        public Criteria andMax_countIsNull() {
            addCriterion("max_count is null");
            return (Criteria) this;
        }

        public Criteria andMax_countIsNotNull() {
            addCriterion("max_count is not null");
            return (Criteria) this;
        }

        public Criteria andMax_countEqualTo(Boolean value) {
            addCriterion("max_count =", value, "max_count");
            return (Criteria) this;
        }

        public Criteria andMax_countNotEqualTo(Boolean value) {
            addCriterion("max_count <>", value, "max_count");
            return (Criteria) this;
        }

        public Criteria andMax_countGreaterThan(Boolean value) {
            addCriterion("max_count >", value, "max_count");
            return (Criteria) this;
        }

        public Criteria andMax_countGreaterThanOrEqualTo(Boolean value) {
            addCriterion("max_count >=", value, "max_count");
            return (Criteria) this;
        }

        public Criteria andMax_countLessThan(Boolean value) {
            addCriterion("max_count <", value, "max_count");
            return (Criteria) this;
        }

        public Criteria andMax_countLessThanOrEqualTo(Boolean value) {
            addCriterion("max_count <=", value, "max_count");
            return (Criteria) this;
        }

        public Criteria andMax_countIn(List<Boolean> values) {
            addCriterion("max_count in", values, "max_count");
            return (Criteria) this;
        }

        public Criteria andMax_countNotIn(List<Boolean> values) {
            addCriterion("max_count not in", values, "max_count");
            return (Criteria) this;
        }

        public Criteria andMax_countBetween(Boolean value1, Boolean value2) {
            addCriterion("max_count between", value1, value2, "max_count");
            return (Criteria) this;
        }

        public Criteria andMax_countNotBetween(Boolean value1, Boolean value2) {
            addCriterion("max_count not between", value1, value2, "max_count");
            return (Criteria) this;
        }

        public Criteria andLineIsNull() {
            addCriterion("line is null");
            return (Criteria) this;
        }

        public Criteria andLineIsNotNull() {
            addCriterion("line is not null");
            return (Criteria) this;
        }

        public Criteria andLineEqualTo(Boolean value) {
            addCriterion("line =", value, "line");
            return (Criteria) this;
        }

        public Criteria andLineNotEqualTo(Boolean value) {
            addCriterion("line <>", value, "line");
            return (Criteria) this;
        }

        public Criteria andLineGreaterThan(Boolean value) {
            addCriterion("line >", value, "line");
            return (Criteria) this;
        }

        public Criteria andLineGreaterThanOrEqualTo(Boolean value) {
            addCriterion("line >=", value, "line");
            return (Criteria) this;
        }

        public Criteria andLineLessThan(Boolean value) {
            addCriterion("line <", value, "line");
            return (Criteria) this;
        }

        public Criteria andLineLessThanOrEqualTo(Boolean value) {
            addCriterion("line <=", value, "line");
            return (Criteria) this;
        }

        public Criteria andLineIn(List<Boolean> values) {
            addCriterion("line in", values, "line");
            return (Criteria) this;
        }

        public Criteria andLineNotIn(List<Boolean> values) {
            addCriterion("line not in", values, "line");
            return (Criteria) this;
        }

        public Criteria andLineBetween(Boolean value1, Boolean value2) {
            addCriterion("line between", value1, value2, "line");
            return (Criteria) this;
        }

        public Criteria andLineNotBetween(Boolean value1, Boolean value2) {
            addCriterion("line not between", value1, value2, "line");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ticket
     *
     * @mbg.generated do_not_delete_during_merge Sun Sep 30 16:04:29 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ticket
     *
     * @mbg.generated Sun Sep 30 16:04:29 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}