package com.treasure.mbgenerator.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class TicketExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ticket
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ticket
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ticket
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbg.generated
     */
    public TicketExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ticket
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ticket
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andTicketIdIsNull() {
            addCriterion("ticket_id is null");
            return (Criteria) this;
        }

        public Criteria andTicketIdIsNotNull() {
            addCriterion("ticket_id is not null");
            return (Criteria) this;
        }

        public Criteria andTicketIdEqualTo(Integer value) {
            addCriterion("ticket_id =", value, "ticketId");
            return (Criteria) this;
        }

        public Criteria andTicketIdNotEqualTo(Integer value) {
            addCriterion("ticket_id <>", value, "ticketId");
            return (Criteria) this;
        }

        public Criteria andTicketIdGreaterThan(Integer value) {
            addCriterion("ticket_id >", value, "ticketId");
            return (Criteria) this;
        }

        public Criteria andTicketIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ticket_id >=", value, "ticketId");
            return (Criteria) this;
        }

        public Criteria andTicketIdLessThan(Integer value) {
            addCriterion("ticket_id <", value, "ticketId");
            return (Criteria) this;
        }

        public Criteria andTicketIdLessThanOrEqualTo(Integer value) {
            addCriterion("ticket_id <=", value, "ticketId");
            return (Criteria) this;
        }

        public Criteria andTicketIdIn(List<Integer> values) {
            addCriterion("ticket_id in", values, "ticketId");
            return (Criteria) this;
        }

        public Criteria andTicketIdNotIn(List<Integer> values) {
            addCriterion("ticket_id not in", values, "ticketId");
            return (Criteria) this;
        }

        public Criteria andTicketIdBetween(Integer value1, Integer value2) {
            addCriterion("ticket_id between", value1, value2, "ticketId");
            return (Criteria) this;
        }

        public Criteria andTicketIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ticket_id not between", value1, value2, "ticketId");
            return (Criteria) this;
        }

        public Criteria andTicketNoIsNull() {
            addCriterion("ticket_no is null");
            return (Criteria) this;
        }

        public Criteria andTicketNoIsNotNull() {
            addCriterion("ticket_no is not null");
            return (Criteria) this;
        }

        public Criteria andTicketNoEqualTo(String value) {
            addCriterion("ticket_no =", value, "ticketNo");
            return (Criteria) this;
        }

        public Criteria andTicketNoNotEqualTo(String value) {
            addCriterion("ticket_no <>", value, "ticketNo");
            return (Criteria) this;
        }

        public Criteria andTicketNoGreaterThan(String value) {
            addCriterion("ticket_no >", value, "ticketNo");
            return (Criteria) this;
        }

        public Criteria andTicketNoGreaterThanOrEqualTo(String value) {
            addCriterion("ticket_no >=", value, "ticketNo");
            return (Criteria) this;
        }

        public Criteria andTicketNoLessThan(String value) {
            addCriterion("ticket_no <", value, "ticketNo");
            return (Criteria) this;
        }

        public Criteria andTicketNoLessThanOrEqualTo(String value) {
            addCriterion("ticket_no <=", value, "ticketNo");
            return (Criteria) this;
        }

        public Criteria andTicketNoLike(String value) {
            addCriterion("ticket_no like", value, "ticketNo");
            return (Criteria) this;
        }

        public Criteria andTicketNoNotLike(String value) {
            addCriterion("ticket_no not like", value, "ticketNo");
            return (Criteria) this;
        }

        public Criteria andTicketNoIn(List<String> values) {
            addCriterion("ticket_no in", values, "ticketNo");
            return (Criteria) this;
        }

        public Criteria andTicketNoNotIn(List<String> values) {
            addCriterion("ticket_no not in", values, "ticketNo");
            return (Criteria) this;
        }

        public Criteria andTicketNoBetween(String value1, String value2) {
            addCriterion("ticket_no between", value1, value2, "ticketNo");
            return (Criteria) this;
        }

        public Criteria andTicketNoNotBetween(String value1, String value2) {
            addCriterion("ticket_no not between", value1, value2, "ticketNo");
            return (Criteria) this;
        }

        public Criteria andTicketNumIsNull() {
            addCriterion("ticket_num is null");
            return (Criteria) this;
        }

        public Criteria andTicketNumIsNotNull() {
            addCriterion("ticket_num is not null");
            return (Criteria) this;
        }

        public Criteria andTicketNumEqualTo(String value) {
            addCriterion("ticket_num =", value, "ticketNum");
            return (Criteria) this;
        }

        public Criteria andTicketNumNotEqualTo(String value) {
            addCriterion("ticket_num <>", value, "ticketNum");
            return (Criteria) this;
        }

        public Criteria andTicketNumGreaterThan(String value) {
            addCriterion("ticket_num >", value, "ticketNum");
            return (Criteria) this;
        }

        public Criteria andTicketNumGreaterThanOrEqualTo(String value) {
            addCriterion("ticket_num >=", value, "ticketNum");
            return (Criteria) this;
        }

        public Criteria andTicketNumLessThan(String value) {
            addCriterion("ticket_num <", value, "ticketNum");
            return (Criteria) this;
        }

        public Criteria andTicketNumLessThanOrEqualTo(String value) {
            addCriterion("ticket_num <=", value, "ticketNum");
            return (Criteria) this;
        }

        public Criteria andTicketNumLike(String value) {
            addCriterion("ticket_num like", value, "ticketNum");
            return (Criteria) this;
        }

        public Criteria andTicketNumNotLike(String value) {
            addCriterion("ticket_num not like", value, "ticketNum");
            return (Criteria) this;
        }

        public Criteria andTicketNumIn(List<String> values) {
            addCriterion("ticket_num in", values, "ticketNum");
            return (Criteria) this;
        }

        public Criteria andTicketNumNotIn(List<String> values) {
            addCriterion("ticket_num not in", values, "ticketNum");
            return (Criteria) this;
        }

        public Criteria andTicketNumBetween(String value1, String value2) {
            addCriterion("ticket_num between", value1, value2, "ticketNum");
            return (Criteria) this;
        }

        public Criteria andTicketNumNotBetween(String value1, String value2) {
            addCriterion("ticket_num not between", value1, value2, "ticketNum");
            return (Criteria) this;
        }

        public Criteria andTicketDateIsNull() {
            addCriterion("ticket_date is null");
            return (Criteria) this;
        }

        public Criteria andTicketDateIsNotNull() {
            addCriterion("ticket_date is not null");
            return (Criteria) this;
        }

        public Criteria andTicketDateEqualTo(Date value) {
            addCriterionForJDBCDate("ticket_date =", value, "ticketDate");
            return (Criteria) this;
        }

        public Criteria andTicketDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("ticket_date <>", value, "ticketDate");
            return (Criteria) this;
        }

        public Criteria andTicketDateGreaterThan(Date value) {
            addCriterionForJDBCDate("ticket_date >", value, "ticketDate");
            return (Criteria) this;
        }

        public Criteria andTicketDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ticket_date >=", value, "ticketDate");
            return (Criteria) this;
        }

        public Criteria andTicketDateLessThan(Date value) {
            addCriterionForJDBCDate("ticket_date <", value, "ticketDate");
            return (Criteria) this;
        }

        public Criteria andTicketDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ticket_date <=", value, "ticketDate");
            return (Criteria) this;
        }

        public Criteria andTicketDateIn(List<Date> values) {
            addCriterionForJDBCDate("ticket_date in", values, "ticketDate");
            return (Criteria) this;
        }

        public Criteria andTicketDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("ticket_date not in", values, "ticketDate");
            return (Criteria) this;
        }

        public Criteria andTicketDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ticket_date between", value1, value2, "ticketDate");
            return (Criteria) this;
        }

        public Criteria andTicketDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ticket_date not between", value1, value2, "ticketDate");
            return (Criteria) this;
        }

        public Criteria andBef3MaxCountIsNull() {
            addCriterion("bef3_max_count is null");
            return (Criteria) this;
        }

        public Criteria andBef3MaxCountIsNotNull() {
            addCriterion("bef3_max_count is not null");
            return (Criteria) this;
        }

        public Criteria andBef3MaxCountEqualTo(Boolean value) {
            addCriterion("bef3_max_count =", value, "bef3MaxCount");
            return (Criteria) this;
        }

        public Criteria andBef3MaxCountNotEqualTo(Boolean value) {
            addCriterion("bef3_max_count <>", value, "bef3MaxCount");
            return (Criteria) this;
        }

        public Criteria andBef3MaxCountGreaterThan(Boolean value) {
            addCriterion("bef3_max_count >", value, "bef3MaxCount");
            return (Criteria) this;
        }

        public Criteria andBef3MaxCountGreaterThanOrEqualTo(Boolean value) {
            addCriterion("bef3_max_count >=", value, "bef3MaxCount");
            return (Criteria) this;
        }

        public Criteria andBef3MaxCountLessThan(Boolean value) {
            addCriterion("bef3_max_count <", value, "bef3MaxCount");
            return (Criteria) this;
        }

        public Criteria andBef3MaxCountLessThanOrEqualTo(Boolean value) {
            addCriterion("bef3_max_count <=", value, "bef3MaxCount");
            return (Criteria) this;
        }

        public Criteria andBef3MaxCountIn(List<Boolean> values) {
            addCriterion("bef3_max_count in", values, "bef3MaxCount");
            return (Criteria) this;
        }

        public Criteria andBef3MaxCountNotIn(List<Boolean> values) {
            addCriterion("bef3_max_count not in", values, "bef3MaxCount");
            return (Criteria) this;
        }

        public Criteria andBef3MaxCountBetween(Boolean value1, Boolean value2) {
            addCriterion("bef3_max_count between", value1, value2, "bef3MaxCount");
            return (Criteria) this;
        }

        public Criteria andBef3MaxCountNotBetween(Boolean value1, Boolean value2) {
            addCriterion("bef3_max_count not between", value1, value2, "bef3MaxCount");
            return (Criteria) this;
        }

        public Criteria andMid3MaxCountIsNull() {
            addCriterion("mid3_max_count is null");
            return (Criteria) this;
        }

        public Criteria andMid3MaxCountIsNotNull() {
            addCriterion("mid3_max_count is not null");
            return (Criteria) this;
        }

        public Criteria andMid3MaxCountEqualTo(Boolean value) {
            addCriterion("mid3_max_count =", value, "mid3MaxCount");
            return (Criteria) this;
        }

        public Criteria andMid3MaxCountNotEqualTo(Boolean value) {
            addCriterion("mid3_max_count <>", value, "mid3MaxCount");
            return (Criteria) this;
        }

        public Criteria andMid3MaxCountGreaterThan(Boolean value) {
            addCriterion("mid3_max_count >", value, "mid3MaxCount");
            return (Criteria) this;
        }

        public Criteria andMid3MaxCountGreaterThanOrEqualTo(Boolean value) {
            addCriterion("mid3_max_count >=", value, "mid3MaxCount");
            return (Criteria) this;
        }

        public Criteria andMid3MaxCountLessThan(Boolean value) {
            addCriterion("mid3_max_count <", value, "mid3MaxCount");
            return (Criteria) this;
        }

        public Criteria andMid3MaxCountLessThanOrEqualTo(Boolean value) {
            addCriterion("mid3_max_count <=", value, "mid3MaxCount");
            return (Criteria) this;
        }

        public Criteria andMid3MaxCountIn(List<Boolean> values) {
            addCriterion("mid3_max_count in", values, "mid3MaxCount");
            return (Criteria) this;
        }

        public Criteria andMid3MaxCountNotIn(List<Boolean> values) {
            addCriterion("mid3_max_count not in", values, "mid3MaxCount");
            return (Criteria) this;
        }

        public Criteria andMid3MaxCountBetween(Boolean value1, Boolean value2) {
            addCriterion("mid3_max_count between", value1, value2, "mid3MaxCount");
            return (Criteria) this;
        }

        public Criteria andMid3MaxCountNotBetween(Boolean value1, Boolean value2) {
            addCriterion("mid3_max_count not between", value1, value2, "mid3MaxCount");
            return (Criteria) this;
        }

        public Criteria andAft3MaxCountIsNull() {
            addCriterion("aft3_max_count is null");
            return (Criteria) this;
        }

        public Criteria andAft3MaxCountIsNotNull() {
            addCriterion("aft3_max_count is not null");
            return (Criteria) this;
        }

        public Criteria andAft3MaxCountEqualTo(Boolean value) {
            addCriterion("aft3_max_count =", value, "aft3MaxCount");
            return (Criteria) this;
        }

        public Criteria andAft3MaxCountNotEqualTo(Boolean value) {
            addCriterion("aft3_max_count <>", value, "aft3MaxCount");
            return (Criteria) this;
        }

        public Criteria andAft3MaxCountGreaterThan(Boolean value) {
            addCriterion("aft3_max_count >", value, "aft3MaxCount");
            return (Criteria) this;
        }

        public Criteria andAft3MaxCountGreaterThanOrEqualTo(Boolean value) {
            addCriterion("aft3_max_count >=", value, "aft3MaxCount");
            return (Criteria) this;
        }

        public Criteria andAft3MaxCountLessThan(Boolean value) {
            addCriterion("aft3_max_count <", value, "aft3MaxCount");
            return (Criteria) this;
        }

        public Criteria andAft3MaxCountLessThanOrEqualTo(Boolean value) {
            addCriterion("aft3_max_count <=", value, "aft3MaxCount");
            return (Criteria) this;
        }

        public Criteria andAft3MaxCountIn(List<Boolean> values) {
            addCriterion("aft3_max_count in", values, "aft3MaxCount");
            return (Criteria) this;
        }

        public Criteria andAft3MaxCountNotIn(List<Boolean> values) {
            addCriterion("aft3_max_count not in", values, "aft3MaxCount");
            return (Criteria) this;
        }

        public Criteria andAft3MaxCountBetween(Boolean value1, Boolean value2) {
            addCriterion("aft3_max_count between", value1, value2, "aft3MaxCount");
            return (Criteria) this;
        }

        public Criteria andAft3MaxCountNotBetween(Boolean value1, Boolean value2) {
            addCriterion("aft3_max_count not between", value1, value2, "aft3MaxCount");
            return (Criteria) this;
        }

        public Criteria andMaxCountIsNull() {
            addCriterion("max_count is null");
            return (Criteria) this;
        }

        public Criteria andMaxCountIsNotNull() {
            addCriterion("max_count is not null");
            return (Criteria) this;
        }

        public Criteria andMaxCountEqualTo(Boolean value) {
            addCriterion("max_count =", value, "maxCount");
            return (Criteria) this;
        }

        public Criteria andMaxCountNotEqualTo(Boolean value) {
            addCriterion("max_count <>", value, "maxCount");
            return (Criteria) this;
        }

        public Criteria andMaxCountGreaterThan(Boolean value) {
            addCriterion("max_count >", value, "maxCount");
            return (Criteria) this;
        }

        public Criteria andMaxCountGreaterThanOrEqualTo(Boolean value) {
            addCriterion("max_count >=", value, "maxCount");
            return (Criteria) this;
        }

        public Criteria andMaxCountLessThan(Boolean value) {
            addCriterion("max_count <", value, "maxCount");
            return (Criteria) this;
        }

        public Criteria andMaxCountLessThanOrEqualTo(Boolean value) {
            addCriterion("max_count <=", value, "maxCount");
            return (Criteria) this;
        }

        public Criteria andMaxCountIn(List<Boolean> values) {
            addCriterion("max_count in", values, "maxCount");
            return (Criteria) this;
        }

        public Criteria andMaxCountNotIn(List<Boolean> values) {
            addCriterion("max_count not in", values, "maxCount");
            return (Criteria) this;
        }

        public Criteria andMaxCountBetween(Boolean value1, Boolean value2) {
            addCriterion("max_count between", value1, value2, "maxCount");
            return (Criteria) this;
        }

        public Criteria andMaxCountNotBetween(Boolean value1, Boolean value2) {
            addCriterion("max_count not between", value1, value2, "maxCount");
            return (Criteria) this;
        }

        public Criteria andLineIsNull() {
            addCriterion("line is null");
            return (Criteria) this;
        }

        public Criteria andLineIsNotNull() {
            addCriterion("line is not null");
            return (Criteria) this;
        }

        public Criteria andLineEqualTo(Boolean value) {
            addCriterion("line =", value, "line");
            return (Criteria) this;
        }

        public Criteria andLineNotEqualTo(Boolean value) {
            addCriterion("line <>", value, "line");
            return (Criteria) this;
        }

        public Criteria andLineGreaterThan(Boolean value) {
            addCriterion("line >", value, "line");
            return (Criteria) this;
        }

        public Criteria andLineGreaterThanOrEqualTo(Boolean value) {
            addCriterion("line >=", value, "line");
            return (Criteria) this;
        }

        public Criteria andLineLessThan(Boolean value) {
            addCriterion("line <", value, "line");
            return (Criteria) this;
        }

        public Criteria andLineLessThanOrEqualTo(Boolean value) {
            addCriterion("line <=", value, "line");
            return (Criteria) this;
        }

        public Criteria andLineIn(List<Boolean> values) {
            addCriterion("line in", values, "line");
            return (Criteria) this;
        }

        public Criteria andLineNotIn(List<Boolean> values) {
            addCriterion("line not in", values, "line");
            return (Criteria) this;
        }

        public Criteria andLineBetween(Boolean value1, Boolean value2) {
            addCriterion("line between", value1, value2, "line");
            return (Criteria) this;
        }

        public Criteria andLineNotBetween(Boolean value1, Boolean value2) {
            addCriterion("line not between", value1, value2, "line");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ticket
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ticket
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}